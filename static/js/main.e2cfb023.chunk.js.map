{"version":3,"sources":["components/About.jsx","components/Home.jsx","route-provider/index.jsx","App.jsx","reducers/app_reducer.js","reducers/root_reducer.js","sagas/app_watcher_saga.js","sagas/root_saga.js","index.js","store/configure_store.js"],"names":["About","this","props","name","React","Component","connect","state","AppReducer","Home","RouteProvider","path","App","className","to","initialState","newState","Object","assign","rootReducer","combineReducers","routing","routerReducer","incrementAsync","appListSaga","put","type","takeEvery","rootSaga","document","addEventListener","node","getElementById","store","sagaMiddleware","createSagaMiddleware","middleware","composedEnhancers","compose","applyMiddleware","createStore","run","configureStore","ReactDOM","render"],"mappings":"iSAGQA,E,iLAEJ,OAAO,4BAAKC,KAAKC,MAAMC,U,GAFLC,IAAMC,WAkBbC,eAXS,SAACC,GACrB,MAAM,CACFJ,KAAsBI,EAAMC,WAAWL,QAW3C,KAFWG,CAGbN,GCtBmBS,E,iLAEb,OAAO,qE,GAFmBL,IAAMC,WCOjBK,E,iLAGf,OACI,kBAAC,IAAD,KACF,kBAAC,IAAD,CAAOC,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,Y,GAZiCP,IAAMC,W,QCuBpCO,MAxBf,WACE,OACE,yBAAKC,UAAU,OACnB,kBAAC,IAAD,KACA,6BACU,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,WAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,iBAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,iBAAT,YAKL,kBAAC,EAAD,S,uBCxBHC,EAAe,CAChBZ,KAAM,0BAQKK,EALG,WAAoC,IAAnCD,EAAkC,uDAA1BQ,EAClBC,GAD4C,iCACjCC,OAAOC,OAAO,GAAIX,IACnC,OAAOS,GCIIG,EALKC,YAAgB,CACjCC,QAAQC,gBACRd,e,4CCPOe,G,WAKOC,GALjB,SAAUD,IAAV,iEAEI,OAFJ,SAEUE,YAAI,CAAEC,KAAM,cAFtB,uCAKO,SAAUF,IAAV,iEACH,OADG,SACGG,YAAU,kBAAmBJ,GADhC,uC,eCJkBK,GAAV,SAAUA,IAAV,iEACX,OADW,SACL,CAACJ,KADI,uCCQfK,SAASC,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAOF,SAASG,eAAe,QAC/BC,ECLK,SAAwBlB,GACnC,IAAMmB,EAAiBC,cAEjBC,EAAa,CAACF,GAGdG,EAAoBC,YACtBC,IAAe,WAAf,EAAmBH,IAEjBH,EAAQO,YAAYrB,EACtBJ,EACAsB,GAMJ,OAFAH,EAAeO,IAAIb,GAEZK,EDZOS,CAAe,CAACvC,KAAK,yBAIlCwC,IAASC,OACN,kBAAC,IAAD,CAAUX,MAAOA,GACf,kBAAC,EAAD,OAERF,Q","file":"static/js/main.e2cfb023.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n  class About extends React.Component {\r\n    render(){\r\n    return <h2>{this.props.name}</h2>;\r\n    }\r\n    \r\n  }\r\n  \r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        name                : state.AppReducer.name, \r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         actions: bindActionCreators(CRAnalysisActions, dispatch)\r\n//     };\r\n// };\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(About) ","import React from \"react\";\r\n\r\nexport default class Home extends React.Component {\r\n    render(){\r\n        return <h2>Home Data will be added in future</h2>;\r\n    }\r\n    \r\n  }\r\n  ","import { \r\n    Switch,\r\n    Route \r\n  } from \"react-router-dom\";\r\nimport React from \"react\"; \r\n\r\nimport About from \"../components/About\";\r\n\r\nimport  Home from \"../components/Home\";\r\n  export default class RouteProvider extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <Switch>\r\n          <Route path=\"/resume/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/resume/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/resume\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n        )\r\n\r\n\r\n    }\r\n  }","import React from 'react'; \r\nimport './App.scss';\r\nimport RouteProvider from \"./route-provider\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  \r\n  Link\r\n} from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n<Router>\r\n<nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/resume\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/resume/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/resume/users\">Users</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n       \r\n         <RouteProvider/>\r\n       </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\n\r\nconst initialState = {\r\n     name: \"Germiya Jose's Profile\"\r\n};\r\n\r\nconst AppReducer = (state = initialState , action) => {\r\n    const newState = Object.assign({}, state);\r\n    return newState;\r\n}\r\n\r\nexport default  AppReducer;\r\n","import  {combineReducers} from 'redux';\r\n\r\nimport { routerReducer } from 'react-router-redux';\r\n\r\nimport AppReducer from './app_reducer';\r\n \r\n\r\nconst rootReducer = combineReducers({\r\n   routing:routerReducer,\r\n   AppReducer \r\n})\r\n\r\nexport default rootReducer;","import { put, takeEvery, all } from 'redux-saga/effects'\r\n\r\nfunction* incrementAsync() {\r\n    //yield delay(1000)\r\n    yield put({ type: 'INCREMENT' })\r\n  }\r\n   \r\nexport function* appListSaga(){\r\n    yield takeEvery('INCREMENT_ASYNC', incrementAsync)\r\n\r\n}","import \"regenerator-runtime/runtime\";\r\nimport {appListSaga} from './app_watcher_saga';\r\n\r\nexport default function* rootSaga(){\r\n    yield [appListSaga()];\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\n \n\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configure_store'; \n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const node = document.getElementById('root');\n    const store = configureStore({name:\" About: GERMIYA JOSE\"});\n   // console.log(store)\n    //ReactDOM.render(<App/>, node);\n    \n     ReactDOM.render( \n        <Provider store={store}>\n          <App />\n            </Provider>\n, node);\n    \n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport {routerMiddleware} from 'react-router-redux';\r\nimport createSagaMiddleware from 'redux-saga'; \r\nimport rootReducer from '../reducers/root_reducer';\r\nimport rootSaga from '../sagas/root_saga';\r\n\r\n \r\n\r\nexport default function configureStore(initialState) {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n\r\n    const middleware = [sagaMiddleware,\r\n         ];\r\n\r\n    const composedEnhancers = compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n    const store = createStore(rootReducer,\r\n        initialState,\r\n        composedEnhancers\r\n\r\n    );\r\n\r\n    sagaMiddleware.run(rootSaga);\r\n\r\n    return store;\r\n}"],"sourceRoot":""}